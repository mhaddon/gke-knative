apiVersion: apps/v1
kind: Deployment
metadata:
  name: ship-request-api
  labels:
    access-ship-db: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: ship-request-api
  template:
    metadata:
      labels:
        access-ship-db: "1"
        component: ship-request-api
    spec:
      containers:
        - name: ship
          image: eu.gcr.io/mhaddon/ship-request-api:v1
          resources:
            limits:
              cpu: "100m"
              memory: 256Mi
            requests:
              cpu: "50m"
              memory: 64Mi
          ports:
            - containerPort: 80
          env:
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: ship-db-credentials
                  key: username
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ship-db-credentials
                  key: password
            - name: MONGO_COLLECTION
              valueFrom:
                secretKeyRef:
                  name: ship-db-credentials
                  key: collection
            - name: MONGO_DB
              valueFrom:
                secretKeyRef:
                  name: ship-db-credentials
                  key: database
            - name: MONGO_DOMAIN
              value: 'ship-db.default.svc.cluster.local'
            - name: MONGO_PORT
              value: '27017'
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: ship-request-api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ship-request-api
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
    - type: Pods
      pods:
        metric:
          name: packets-per-second
        target:
          type: AverageValue
          averageValue: 1k
---
apiVersion: v1
kind: Service
metadata:
  name: ship-request-api
spec:
  ports:
    - name: transport
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    component: ship
  type: ClusterIP

---

#apiVersion: networking.istio.io/v1alpha3
#kind: VirtualService
#metadata:
#  name: ship-entry-route
#spec:
#  gateways:
#    - knative-serving/cluster-local-gateway
#    - knative-serving/knative-ingress-gateway
#  hosts:
#    - ship.tiw.io
#  http:
#    - rewrite:
#        authority: ship.default.tiw.io
#      route:
#        - destination:
#            host: istio-ingressgateway.istio-system.svc.cluster.local
#            port:
#              number: 80
#          weight: 100
#
#---

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ship
spec:
  selector:
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - ship.tiw.io
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: ship
spec:
  hosts:
    - ship.tiw.io
  gateways:
    - ship
  http:
    - route:
        - destination:
            port:
              number: 80
            host: ship

---

apiVersion: authentication.istio.io/v1alpha1
kind: Policy
metadata:
  name: ship-auth-policy
spec:
  targets:
    - name: ship
      ports:
        - number: 80
        - number: 443
  origins:
    - jwt:
        issuer: "https://securetoken.google.com/mhaddon"
        audiences:
          - "mhaddon"
        jwksUri: "https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com"
        trigger_rules:
          - excluded_paths:
              - exact: /alive
              - exact: /health
          - included_paths:
              - exact: /notifications
  principalBinding: USE_ORIGIN