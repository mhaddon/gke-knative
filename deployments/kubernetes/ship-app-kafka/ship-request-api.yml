apiVersion: v1
kind: ServiceAccount
metadata:
  name: ship-request-api

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ship-request-api
  namespace: ship-app-kafka
  labels:
    access-ship-store-mongodb: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: ship-request-api
  template:
    metadata:
      labels:
        access-ship-store-mongodb: "1"
        component: ship-request-api
    spec:
      serviceAccountName: ship-request-api
      containers:
        - name: ship-request-api
          image: eu.gcr.io/mhaddon/ship-request-api:v2
          env:
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: ship-store-mongodb-credentials
                  key: username
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ship-store-mongodb-credentials
                  key: password
            - name: MONGO_COLLECTION
              valueFrom:
                secretKeyRef:
                  name: ship-store-mongodb-credentials
                  key: collection
            - name: MONGO_DB
              valueFrom:
                secretKeyRef:
                  name: ship-store-mongodb-credentials
                  key: database
            - name: MONGO_DOMAIN
              value: 'ship-store-mongodb.ship-app-kafka.svc.cluster.local'
            - name: MONGO_PORT
              value: '27017'
          resources:
            limits:
              cpu: "100m"
              memory: 256Mi
            requests:
              cpu: "50m"
              memory: 64Mi
          ports:
            - containerPort: 8080

---

apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: ship-request-api
  namespace: ship-app-kafka
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ship-request-api
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
    - type: Pods
      pods:
        metric:
          name: packets-per-second
        target:
          type: AverageValue
          averageValue: 1k

---

apiVersion: v1
kind: Service
metadata:
  name: ship-request-api
  namespace: ship-app-kafka
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    component: ship-request-api
  type: ClusterIP

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: ship-request-api
  namespace: ship-app-kafka
spec:
  hosts:
    - "ship.tiw.io"
  gateways:
    - tiwio-gateway
  http:
    - route:
        - destination:
            host: ship-request-api
            port:
              number: 80
      corsPolicy:
          allowOrigin:
            - "*"
          allowMethods:
            - PUT
            - GET
          allowCredentials: true
          allowHeaders:
            - X-Requested-With
            - Content-Type
          maxAge: "24h"

---

apiVersion: authentication.istio.io/v1alpha1
kind: Policy
metadata:
  name: ship-request-api
  namespace: ship-app-kafka
spec:
  targets:
    - name: ship-request-api
  origins:
    - jwt:
        issuer: "https://securetoken.google.com/mhaddon"
        audiences:
          - "mhaddon"
        jwksUri: "https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com"
        trigger_rules:
          - excluded_paths:
              - exact: /alive
              - exact: /health
          - included_paths:
              - exact: /notifications
  principalBinding: USE_ORIGIN
